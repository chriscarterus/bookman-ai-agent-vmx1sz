# Authentication Service Deployment Configuration
# Version: v1.0
# Purpose: Production deployment for authentication microservice with enhanced security and scalability

---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: bookman
  labels:
    app: bookman-ai
    service: auth
    tier: backend
    environment: production
spec:
  replicas: 3  # High availability with 3 replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero-downtime deployments
  selector:
    matchLabels:
      app: bookman-ai
      service: auth
  template:
    metadata:
      labels:
        app: bookman-ai
        service: auth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
        checksum/config: "${CONFIG_CHECKSUM}"
        security.policy/version: "v1.0"
    spec:
      containers:
      - name: auth-service
        image: bookman/auth-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          protocol: TCP
          name: http
        - containerPort: 9090
          protocol: TCP
          name: metrics
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
        envFrom:
        - configMapRef:
            name: auth-service-config
        - secretRef:
            name: auth-service-secrets
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: certs
          mountPath: /etc/certs
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: certs
        secret:
          secretName: auth-service-tls
      serviceAccountName: auth-service-sa
      securityContext:
        fsGroup: 1000
        supplementalGroups:
        - 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: bookman-ai
                  service: auth
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - backend
      tolerations:
      - key: backend
        operator: Equal
        value: "true"
        effect: NoSchedule

---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: bookman
  labels:
    app: bookman-ai
    service: auth
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: bookman-ai
    service: auth