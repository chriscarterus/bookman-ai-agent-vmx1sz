# kubernetes v1.26+
apiVersion: apps/v1
kind: Deployment
metadata:
  name: community-service-deployment
  namespace: bookman-ai
  labels:
    app: bookman-ai
    service: community
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bookman-ai
      service: community
  template:
    metadata:
      labels:
        app: bookman-ai
        service: community
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3006"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: bookman-ai
                  service: community
      containers:
      - name: community-service
        image: bookman-ai/community-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3006
          protocol: TCP
          name: http
        env:
        - name: APP_PORT
          valueFrom:
            configMapKeyRef:
              name: community-service-config
              key: APP_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: community-service-config
              key: LOG_LEVEL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: community-service-config
              key: NODE_ENV
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: community-service-secrets
              key: DB_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: community-service-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: community-service-secrets
              key: JWT_SECRET
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: community-data
          mountPath: /data
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: tmp
        emptyDir: {}
      - name: community-data
        persistentVolumeClaim:
          claimName: community-data-pvc
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: community-service
  namespace: bookman-ai
  labels:
    app: bookman-ai
    service: community
spec:
  type: ClusterIP
  ports:
  - port: 3006
    targetPort: 3006
    protocol: TCP
    name: http
  selector:
    app: bookman-ai
    service: community
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: community-service-hpa
  namespace: bookman-ai
  labels:
    app: bookman-ai
    service: community
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: community-service-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60