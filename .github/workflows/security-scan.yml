# Security scanning workflow for Bookman AI Platform
# Version: 1.0.0
# Implements comprehensive security analysis including SAST, dependency scanning,
# container security, and dynamic testing

name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 0 * * 0' # Weekly scan on Sundays

permissions:
  contents: read
  security-events: write
  actions: read
  packages: read
  deployments: read

# Prevent concurrent security scans to avoid resource conflicts
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18.x'
  SCAN_DEBUG_MODE: ${{ vars.SCAN_DEBUG_MODE }}
  SEVERITY_THRESHOLD: ${{ vars.SEVERITY_THRESHOLD || 'medium' }}

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Snyk
        uses: snyk/actions/setup@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Scan Backend Dependencies
        run: |
          cd src/backend
          snyk test --all-projects \
            --severity-threshold=${{ env.SEVERITY_THRESHOLD }} \
            --sarif-file-output=snyk-backend.sarif
            
      - name: Scan Frontend Dependencies
        run: |
          cd src/web
          snyk test --all-projects \
            --severity-threshold=${{ env.SEVERITY_THRESHOLD }} \
            --sarif-file-output=snyk-frontend.sarif
            
      - name: Upload Snyk Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: |
            src/backend/snyk-backend.sarif
            src/web/snyk-frontend.sarif
          category: dependency

  code-scan:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: dependency-scan
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality
          config-file: ./.github/security-policies/codeql-config.yml
          
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: source-code
          output: sarif-results
          
      - name: Upload CodeQL Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif-results
          category: static-analysis

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    needs: code-scan
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Run Trivy Container Scan
        uses: aquasecurity/trivy-action@0.11.2
        with:
          scan-type: 'fs,config'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: ${{ env.SEVERITY_THRESHOLD }},CRITICAL
          
      - name: Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif
          category: container

  dynamic-scan:
    name: Dynamic Security Testing
    runs-on: ubuntu-latest
    needs: container-scan
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Setup Test Environment
        run: |
          # Setup temporary test environment for DAST
          echo "Setting up test environment..."
          
      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:3000'
          rules_file_name: '.github/security-policies/zap-rules.tsv'
          cmd_options: '-a'
          
      - name: Process ZAP Results
        run: |
          if [ -f zap-results.json ]; then
            echo "Processing ZAP scan results..."
            # Convert ZAP results to SARIF format
            node .github/scripts/zap-to-sarif.js
          fi
          
      - name: Upload ZAP Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: zap-results.sarif
          category: dynamic-analysis

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, container-scan, dynamic-scan]
    if: always()
    
    steps:
      - name: Collect Scan Results
        run: |
          echo "Aggregating security scan results..."
          # Aggregate results from all scans
          
      - name: Generate Summary Report
        run: |
          echo "Generating comprehensive security report..."
          # Generate detailed security report with findings
          
      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: |
            **/sarif-results/**
            **/security-report.md
          retention-days: 90
          
      - name: Check Security Status
        if: ${{ failure() }}
        run: |
          echo "::error::Security scan failed! Please review the security report."
          exit 1